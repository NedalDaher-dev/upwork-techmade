"use client"
import React, { Suspense, lazy, useEffect, useState, useContext } from 'react';
import { useRouter , usePathname } from 'next/navigation'; 
import { Inter } from 'next/font/google';
import Head from 'next/head';
import './globals.css';
import { ThemeProvider, ThemeContext } from '@/contexts/ThemeContext';

const LazyNavbar = lazy(() => import('@/components/Navbar'));
const LazyFooter = lazy(() => import('@/components/Footer'));
const inter = Inter({ subsets: ['latin'] });

const RootLayout = ({ children }) => {
  const [isClient, setIsClient] = useState(false);
  const [isTheme , setIsTheme] = useState("dark"); 
  const router = useRouter();
  const path = usePathname();
  useEffect(() => {
    
    if (path === '/') {
      // إذا كان المسار هو الجذر
      setIsTheme('light');
    }else{
      setIsTheme('dark');
    }

  },[path])
  useEffect(() => {
    setIsClient(true);
    // تعيين الثيم بناءً على المسار
  },); // إعادة التشغيل عند تغيير المسار

  return (
    <html lang="en">
      <ThemeProvider theme={isTheme} >
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          {/* Any other head elements here */}
        </Head>
        <body className={inter.className}>
          {isClient && (
            <Suspense fallback={<div>Loading Navbar...</div>}>
              <LazyNavbar type="dark" />
            </Suspense>
          )}
          {children}
        </body>
        {isClient && (
          <Suspense fallback={<div>Loading Footer...</div>}>
            <LazyFooter />
          </Suspense>
        )}
      </ThemeProvider>
    </html>
  );
} 

export default RootLayout;
